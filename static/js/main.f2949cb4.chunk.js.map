{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","clickStart","visibleGoods","this","setState","prevState","reverse","sort","a","b","length","localeCompare","console","log","className","type","onClick","startFinishButton","map","good","getReverse","sortAlphabetically","SortBylength","getReset","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAe,CACbC,MAAOH,EACPI,YAAY,EACZC,aAAa,GAAD,OAAML,I,8CAGpB,WACEM,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEH,aAAa,YAAKG,EAAUL,a,wBAG5D,WACEG,KAAKC,UAAS,SAACC,GAAD,MACZ,CAAEH,aAAcG,EAAUH,aAAaI,gB,0BAI3C,WACEH,KAAKC,UAAS,SAACC,GAAD,MACZ,CACEH,aACAG,EAAUH,aAAaK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,gB,gCAKzD,WACEP,KAAKC,UAAS,SAACC,GAAD,MACZ,CACEH,aAAa,YACTG,EAAUH,aAAaK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,cAAcF,a,+BAKhE,WACEN,KAAKC,UAAS,SAACC,GAAD,MAAgB,CAAEJ,YAAaI,EAAUJ,iB,oBAGzD,WAAU,IAAD,OACCA,EAAeE,KAAKJ,MAApBE,WACAC,EAAiBC,KAAKJ,MAAtBG,aAKR,OAFAU,QAAQC,IAAIhB,GAGV,sBAAKiB,UAAU,mCAAf,UACE,wBACEC,KAAK,SACLD,UAAU,gCACVE,QAAS,kBAAM,EAAKC,qBAHtB,SAKIhB,EAEE,SADA,UAGLA,GAEG,gCACE,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,qBAAgBL,UAAU,iBAA1B,SACE,6BACGK,KAFKA,QAQd,wBACEJ,KAAK,SACLD,UAAU,kCACVE,QAAS,kBAAM,EAAKI,cAHtB,qBAQA,wBACEL,KAAK,SACLD,UAAU,kCACVE,QAAS,kBAAM,EAAKK,sBAHtB,iCAQA,wBACEN,KAAK,SACLD,UAAU,kCACVE,QAAS,kBAAM,EAAKM,gBAHtB,4BAQA,wBACEP,KAAK,SACLD,UAAU,kCACVE,QAAS,kBAAM,EAAKO,YAHtB,6B,GA9FIC,IAAMC,WA4GT3B,IC/Hf4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f2949cb4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[];\n  clickStart: boolean;\n  visibleGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    clickStart: false,\n    visibleGoods: [...goodsFromServer],\n  };\n\n  getReset() {\n    this.setState(prevState => ({ visibleGoods: [...prevState.goods] }));\n  }\n\n  getReverse() {\n    this.setState((prevState) => (\n      { visibleGoods: prevState.visibleGoods.reverse() }\n    ));\n  }\n\n  SortBylength() {\n    this.setState((prevState) => (\n      {\n        visibleGoods:\n        prevState.visibleGoods.sort((a, b) => a.length - b.length),\n      }\n    ));\n  }\n\n  sortAlphabetically() {\n    this.setState((prevState) => (\n      {\n        visibleGoods:\n        [...prevState.visibleGoods.sort((a, b) => a.localeCompare(b))],\n      }\n    ));\n  }\n\n  startFinishButton() {\n    this.setState((prevState) => ({ clickStart: !prevState.clickStart }));\n  }\n\n  render() {\n    const { clickStart } = this.state;\n    const { visibleGoods } = this.state;\n\n    // eslint-disable-next-line no-console\n    console.log(goodsFromServer);\n\n    return (\n      <div className=\"m-5 level-item has-text-centered\">\n        <button\n          type=\"button\"\n          className=\"button is-warning is-outlined\"\n          onClick={() => this.startFinishButton()}\n        >\n          {!clickStart\n            ? 'Start'\n            : 'Finish'}\n        </button>\n        {clickStart\n          && (\n            <div>\n              <ul>\n                {visibleGoods.map(good => (\n                  <div key={good} className=\"has-text-white\">\n                    <li>\n                      {good}\n                    </li>\n                  </div>\n                ))}\n              </ul>\n\n              <button\n                type=\"button\"\n                className=\"button is-warning is-small mr-1\"\n                onClick={() => this.getReverse()}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-warning is-small mr-1\"\n                onClick={() => this.sortAlphabetically()}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-warning is-small mr-1\"\n                onClick={() => this.SortBylength()}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-warning is-small mr-1\"\n                onClick={() => this.getReset()}\n              >\n                Reset\n              </button>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}